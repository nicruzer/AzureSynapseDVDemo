{
	"name": "DROP_CREATE_kaggle_superhero",
	"properties": {
		"content": {
			"query": "IF EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = 'STG_kaggle_superhero' AND O.TYPE = 'U' AND S.NAME = 'stage1')\n\tDROP TABLE stage1.STG_kaggle_superhero\nGO\n\nCREATE TABLE stage1.STG_kaggle_superhero\n\t(\n\t [name] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [real_name] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [full_name] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [overall_score] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [history_text] varchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [powers_text] varchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [intelligence_score] int,\n\t [strength_score] int,\n\t [speed_score] int,\n\t [durability_score] int,\n\t [power_score] int,\n\t [combat_score] int,\n\t [superpowers] nvarchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [alter_egos] nvarchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [aliases] nvarchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [place_of_birth] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [first_appearance] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [creator] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [alignment] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [occupation] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [base] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [teams] nvarchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [relatives] nvarchar(max) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [gender] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [type_race] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [height] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [weight] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [eye_color] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [hair_color] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [skin_color] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [img] varchar(4000) COLLATE Latin1_General_100_CI_AS_SC_UTF8,\n\t [has_electrokinesis] float,\n\t [has_energy_constructs] float,\n\t [has_mind_control_resistance] float,\n\t [has_matter_manipulation] float,\n\t [has_telepathy_resistance] float,\n\t [has_mind_control] float,\n\t [has_enhanced_hearing] float,\n\t [has_dimensional_travel] float,\n\t [has_element_control] float,\n\t [has_size_changing] float,\n\t [has_fire_resistance] float,\n\t [has_fire_control] float,\n\t [has_dexterity] float,\n\t [has_reality_warping] float,\n\t [has_illusions] float,\n\t [has_energy_beams] float,\n\t [has_peak_human_condition] float,\n\t [has_shapeshifting] float,\n\t [has_heat_resistance] float,\n\t [has_jump] float,\n\t [has_self-sustenance] float,\n\t [has_energy_absorption] float,\n\t [has_cold_resistance] float,\n\t [has_magic] float,\n\t [has_telekinesis] float,\n\t [has_toxin_and_disease_resistance] float,\n\t [has_telepathy] float,\n\t [has_regeneration] float,\n\t [has_immortality] float,\n\t [has_teleportation] float,\n\t [has_force_fields] float,\n\t [has_energy_manipulation] float,\n\t [has_endurance] float,\n\t [has_longevity] float,\n\t [has_weapon-based_powers] float,\n\t [has_energy_blasts] float,\n\t [has_enhanced_senses] float,\n\t [has_invulnerability] float,\n\t [has_stealth] float,\n\t [has_marksmanship] float,\n\t [has_flight] float,\n\t [has_accelerated_healing] float,\n\t [has_weapons_master] float,\n\t [has_intelligence] float,\n\t [has_reflexes] float,\n\t [has_super_speed] float,\n\t [has_durability] float,\n\t [has_stamina] float,\n\t [has_agility] float,\n\t [has_super_strength] float\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestrationâ€‹\n--CREATE PROC bulk_load_kaggle_superhero\n--AS\n--BEGIN\nCOPY INTO stage1.STG_kaggle_superhero\n(name 1, real_name 2, full_name 3, overall_score 4, history_text 5, powers_text 6, intelligence_score 7, strength_score 8, \nspeed_score 9, durability_score 10, power_score 11, combat_score 12, superpowers 13, alter_egos 14, aliases 15, place_of_birth 16, \nfirst_appearance 17, creator 18, alignment 19, occupation 20, base 21, teams 22, relatives 23, gender 24, type_race 25, height 26, \nweight 27, eye_color 28, hair_color 29, skin_color 30, img 31, has_electrokinesis 32, has_energy_constructs 33, has_mind_control_resistance 34, \nhas_matter_manipulation 35, has_telepathy_resistance 36, has_mind_control 37, has_enhanced_hearing 38, has_dimensional_travel 39, \nhas_element_control 40, has_size_changing 41, has_fire_resistance 42, has_fire_control 43, has_dexterity 44, has_reality_warping 45, \nhas_illusions 46, has_energy_beams 47, has_peak_human_condition 48, has_shapeshifting 49, has_heat_resistance 50, has_jump 51, \n[has_self-sustenance] 52, has_energy_absorption 53, has_cold_resistance 54, has_magic 55, has_telekinesis 56, has_toxin_and_disease_resistance 57, \nhas_telepathy 58, has_regeneration 59, has_immortality 60, has_teleportation 61, has_force_fields 62, has_energy_manipulation 63, has_endurance 64, \nhas_longevity 65, [has_weapon-based_powers] 66, has_energy_blasts 67, has_enhanced_senses 68, has_invulnerability 69, has_stealth 70, \nhas_marksmanship 71, has_flight 72, has_accelerated_healing 73, has_weapons_master 74, has_intelligence 75, has_reflexes 76, has_super_speed 77, \nhas_durability 78, has_stamina 79, has_agility 80, has_super_strength 81)\nFROM 'https://synapsedvdemo.dfs.core.windows.net/synapsedvdemo/Data/kaggle_superhero/superheroes_nlp_dataset.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://synapsedvdemo.dfs.core.windows.net/synapsedvdemo/'\n\t,CREDENTIAL = ( IDENTITY = 'Managed Identity' )\n\t,ERRORFILE_CREDENTIAL = ( IDENTITY = 'Managed Identity' )\n)\n--END\nGO\n\nSELECT TOP 100 * FROM stage1.STG_kaggle_superhero\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "azuredvsdp",
				"poolName": "azuredvsdp"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}