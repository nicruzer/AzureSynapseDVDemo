{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "azuredvdemo"
		},
		"AzureDVEngineDB_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureDVEngineDB_LS'"
		},
		"AzureSQLSampleDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQLSampleDB'"
		},
		"azuredvdemo-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azuredvdemo-WorkspaceDefaultSqlServer'"
		},
		"AzureDV_keyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://AzureDVKeyVault.vault.azure.net/"
		},
		"azuredvdemo-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsedvdemo.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ImportAbbreviationList')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DF_ImportAbbList",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "InsertToAbbreviationTbl",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ADVEngine": {
										"TableSchema": "dbo",
										"TableName": "AbbreviationClassType"
									},
									"AbbreviationList": {},
									"sink1": {
										"TableSchema": "dbo",
										"TableName": "Abbreviation"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/InsertToAbbreviationTbl')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDVEngineDB')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDVEngineDB_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDVEngineDB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlSample')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLSampleDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSQLSampleDB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDVEngineDB_LS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('AzureDVEngineDB_LS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDV_keyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureDV_keyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSQLSampleDB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQLSampleDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azuredvdemo-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('azuredvdemo-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azuredvdemo-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azuredvdemo-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/InsertToAbbreviationTbl')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureDVEngineDB",
								"type": "DatasetReference"
							},
							"name": "ADVEngine"
						},
						{
							"linkedService": {
								"referenceName": "azuredvdemo-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "AbbreviationList"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureDVEngineDB",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as integer,",
						"          Class as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_COMMITTED',",
						"     query: 'SELECT Id, Class, Type\\nFROM dbo.AbbreviationClassType',",
						"     format: 'query') ~> ADVEngine",
						"source(output(",
						"          Class as string,",
						"          Abbreviation as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'synapsedvdemo',",
						"     folderPath: 'Ad hoc',",
						"     fileName: 'AbbreviationList.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> AbbreviationList",
						"ADVEngine, AbbreviationList join(Type == AbbreviationList@Class,",
						"     joinType:'inner',",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          AbbreviationClassTypeId = Id,",
						"          Value = Abbreviation",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(Style = \"Placeholder\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/AzureDVEngineDB')]",
				"[concat(variables('workspaceId'), '/linkedServices/azuredvdemo-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Metadata Layout')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [GeoLocation] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [Name] varchar(60) UNIQUE NOT NULL,\n  [CreateDate] datetime DEFAULT (GETDATE())\n)\nGO\n\nCREATE TABLE [SourceType] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [Name] varchar(60) UNIQUE NOT NULL,\n  [CreateDate] datetime DEFAULT (GETDATE())\n)\nGO\n\nCREATE TABLE [Organization] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [Name] varchar(60) UNIQUE NOT NULL,\n  [CreateDate] datetime DEFAULT (GETDATE())\n)\nGO\n\nCREATE TABLE [RecordSource] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [GeoLocationId] int NOT NULL,\n  [OrganizationId] int NOT NULL,\n  [Name] varchar(60) NOT NULL,\n  [SourceTypeId] int NOT NULL,\n  [CreateDate] datetime DEFAULT (GETDATE())\n)\nGO\n\nCREATE TABLE [DataVaultTableType] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [Name] varchar(60) UNIQUE NOT NULL,\n  [AppendKey] varchar(10) UNIQUE NOT NULL,\n  [AppendKeyRule] nvarchar(255) NOT NULL CHECK ([AppendKeyRule] IN ('PREFIX', 'SUFFIX', 'AS_SCHEMA'))\n)\nGO\n\nCREATE TABLE [SourceTable] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [TableSchema] varchar(255) NOT NULL,\n  [TableName] varchar(255) NOT NULL,\n  [RecordSourceId] int NOT NULL\n)\nGO\n\nCREATE TABLE [SourceTableVersion] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [Major] int NOT NULL,\n  [Minor] int NOT NULL,\n  [Release] int NOT NULL,\n  [SourceTableId] int NOT NULL\n)\nGO\n\nCREATE TABLE [SourceColumn] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [SourceTableVersionId] int,\n  [ColumnName] varchar(255),\n  [DataType] varchar(255),\n  [CharacterMaxLength] int,\n  [DateNumPrecision] int,\n  [IsNullable] nvarchar(255) NOT NULL CHECK ([IsNullable] IN ('NO', 'YES')),\n  [OrdinalPosition] int NOT NULL,\n  [IsBusinessKey] bit NOT NULL,\n  [IsAttribute] bit NOT NULL,\n  [IsPrimaryKey] bit NOT NULL,\n  [IsForeignKey] bit NOT NULL\n)\nGO\n\nCREATE TABLE [RawVaultTable] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [DataVaultTableTypeId] int NOT NULL,\n  [Name] varchar(255) NOT NULL,\n  [CreateDate] datetime NOT NULL\n)\nGO\n\nCREATE TABLE [RawVaultTableVersion] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [Major] int NOT NULL,\n  [Minor] int NOT NULL,\n  [Release] int NOT NULL,\n  [RawVaultTableId] int NOT NULL\n)\nGO\n\nCREATE TABLE [TableMap] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [SourceTableVersionId] int NOT NULL,\n  [RawVaultTableVersionId] int NOT NULL,\n  [StagingTableVersionId] int NOT NULL,\n  [WhereFilter] nvarchar(255),\n  [LastModDateField] varchar(100),\n  [PullData] bit DEFAULT (1),\n  [TargetDirectory] nvarchar(255)\n)\nGO\n\nCREATE TABLE [DataTypeMap] (\n  [Id] int PRIMARY KEY IDENTITY(1, 1),\n  [SourceTypeId] int NOT NULL,\n  [SourceDataType] varchar(255) NOT NULL,\n  [TargetDataType] varchar(255) NOT NULL\n)\nGO\n\nALTER TABLE [RecordSource] ADD FOREIGN KEY ([GeoLocationId]) REFERENCES [GeoLocation] ([Id])\nGO\n\nALTER TABLE [RecordSource] ADD FOREIGN KEY ([OrganizationId]) REFERENCES [Organization] ([Id])\nGO\n\nALTER TABLE [RecordSource] ADD FOREIGN KEY ([SourceTypeId]) REFERENCES [SourceType] ([Id])\nGO\n\nALTER TABLE [SourceTable] ADD FOREIGN KEY ([RecordSourceId]) REFERENCES [RecordSource] ([Id])\nGO\n\nALTER TABLE [SourceTableVersion] ADD FOREIGN KEY ([SourceTableId]) REFERENCES [SourceTable] ([Id])\nGO\n\nALTER TABLE [SourceColumn] ADD FOREIGN KEY ([SourceTableVersionId]) REFERENCES [SourceTableVersion] ([Id])\nGO\n\nALTER TABLE [RawVaultTable] ADD FOREIGN KEY ([DataVaultTableTypeId]) REFERENCES [DataVaultTableType] ([Id])\nGO\n\nALTER TABLE [RawVaultTableVersion] ADD FOREIGN KEY ([RawVaultTableId]) REFERENCES [RawVaultTable] ([Id])\nGO\n\nALTER TABLE [TableMap] ADD FOREIGN KEY ([SourceTableVersionId]) REFERENCES [SourceTableVersion] ([Id])\nGO\n\nALTER TABLE [TableMap] ADD FOREIGN KEY ([RawVaultTableVersionId]) REFERENCES [RawVaultTableVersion] ([Id])\nGO\n\nALTER TABLE [DataTypeMap] ADD FOREIGN KEY ([SourceTypeId]) REFERENCES [SourceType] ([Id])\nGO\n\nCREATE UNIQUE INDEX [RecordSource_index_0] ON [RecordSource] (\"GeoLocationId\", \"OrganizationId\", \"Name\")\nGO\n\nCREATE UNIQUE INDEX [SourceTable_index_1] ON [SourceTable] (\"TableSchema\", \"TableName\")\nGO\n\nCREATE UNIQUE INDEX [SourceTableVersion_index_2] ON [SourceTableVersion] (\"Major\", \"Minor\", \"Release\", \"SourceTableId\")\nGO\n\nCREATE UNIQUE INDEX [SourceColumn_index_3] ON [SourceColumn] (\"SourceTableVersionId\", \"ColumnName\")\nGO\n\nCREATE UNIQUE INDEX [RawVaultTableVersion_index_4] ON [RawVaultTableVersion] (\"Major\", \"Minor\", \"Release\", \"RawVaultTableId\")\nGO\n\nCREATE UNIQUE INDEX [TableMap_index_5] ON [TableMap] (\"SourceTableVersionId\", \"RawVaultTableVersionId\")\nGO\n\nCREATE UNIQUE INDEX [DataTypeMap_index_6] ON [DataTypeMap] (\"SourceTypeId\", \"SourceDataType\")\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "AzureDVEngine",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/AzureDV-KV')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/abecf403-c605-409c-acba-6459bd193009/resourceGroups/PrimaryRsc/providers/Microsoft.KeyVault/vaults/AzureDVKeyVault",
				"groupId": "vault"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/AzureDVEngineDB')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/abecf403-c605-409c-acba-6459bd193009/resourceGroups/PrimaryRsc/providers/Microsoft.Sql/servers/azuredv",
				"groupId": "sqlServer"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-custstgacct--azuredvdemo-synapsedvdemo')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/abecf403-c605-409c-acba-6459bd193009/resourceGroups/PrimaryRsc/providers/Microsoft.Storage/storageAccounts/synapsedvdemo",
				"groupId": "dfs"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--azuredvdemo')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/abecf403-c605-409c-acba-6459bd193009/resourceGroups/PrimaryRsc/providers/Microsoft.Synapse/workspaces/azuredvdemo",
				"groupId": "sql",
				"fqdns": [
					"azuredvdemo.acd92239-3586-411a-a41d-b7a4fb3e116f.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--azuredvdemo')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/abecf403-c605-409c-acba-6459bd193009/resourceGroups/PrimaryRsc/providers/Microsoft.Synapse/workspaces/azuredvdemo",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"azuredvdemo-ondemand.acd92239-3586-411a-a41d-b7a4fb3e116f.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}